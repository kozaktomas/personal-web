name: Docker

on:
  push:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Test job
  test:
    runs-on: ubuntu-latest
    container:
      image: php:8.4-cli
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies and prepare environment
        run: |
          apt-get update && apt-get install -y zlib1g-dev git libzip-dev unzip libicu-dev
          docker-php-ext-configure intl && docker-php-ext-install intl
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php composer-setup.php --install-dir=/bin --filename=composer
          composer install
          mkdir -p temp/cache temp/sessions temp/data log
      - name: Run unit tests
        run: php vendor/bin/tester -c tests/unit/php.ini tests/unit/
      - name: Run PHPStan
        run: php vendor/bin/phpstan analyse -c phpstan.neon --memory-limit=256M -l max app
  # Build job
  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}